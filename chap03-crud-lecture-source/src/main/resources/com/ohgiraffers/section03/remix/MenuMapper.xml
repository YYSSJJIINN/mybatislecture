<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    설명. Mapper는...
    1. DAO 인터페이스와 동일한 패키지명으로 경로를 일치시켜줘야 한다.
    2. DAO 인터페이스의 풀네임을 namespce에 할당해줘야한다.
    3. Mapper 인터페이스와 XML 파일의 이름이 동일해야한다.
    4. Mapper 인터페이스에 정의된 추상 메서드의 이름과 id가 일치하고,
       리턴 타입(parameter)이 일치하는 쿼리문을 모두 작성해줘야한다.
       ex)selectAllMenu()가 추상 메서드다.
-->
<mapper namespace="com.ohgiraffers.section03.remix.MenuMapper">

<!--    <resultMap id="menuResultMap" type="com.ohgiraffers.section03.remix.MenuDTO">-->
    <resultMap id="menuResultMap" type="MenuDTO">
        <id property="code" column="menu_code"/>
        <result property="name" column="menu_name"/>
        <result property="price" column="menu_price"/>
        <result property="categoryCode" column="category_code"/>
        <result property="orderableStatus" column="orderable_status"/>
    </resultMap>

    <select id="selectAllMenu" resultMap="menuResultMap">
        select
            m.menu_code,
            m.menu_name,
            m.menu_price,
            m.category_code,
            m.orderable_status
        from
            tbl_menu m
        where
            m.orderable_status = 'Y'
        order by
            m.menu_code
    </select>

    <select id="selectMenuByCode" parameterType="_int" resultMap="menuResultMap">
        select
            m.menu_code,
            m.menu_name,
            m.menu_price,
            m.category_code,
            m.orderable_status
        from
            tbl_menu m
        where
            m.orderable_status = 'Y' and
            menu_code = #{code}
    </select>
    <!--
        설명. MyBatis 기본 자료형(Primitive Type) 및 Type Alias 정보
         MyBatis는 기본적으로 Java의 Primitive Type과 Wrapper Class를 지원하며,
         아래의 Type Alias를 사용하거나 Java 타입 이름을 직접 사용할 수 있다.
         =========================================================================
         1. Primitive Type (기본 자료형)과 매핑되는 Type Alias
            _byte    : byte
            _short   : short
            _int     : int
            _long    : long
            _float   : float
            _double  : double
            _boolean : boolean
         =========================================================================
         2. Wrapper Class와 매핑되는 Type Alias
            byte     : java.lang.Byte
            short    : java.lang.Short
            int      : java.lang.Integer
            long     : java.lang.Long
            float    : java.lang.Float
            double   : java.lang.Double
            boolean  : java.lang.Boolean
            string   : java.lang.String
         =========================================================================
         - resultType 또는 parameterType에 Primitive Type Alias(ex: _int)를 사용하지 않아도
           MyBatis는 이를 명확히 해석하므로, int와 같은 Java 기본 자료형도 동작한다.
         - 명시적으로 Type Alias를 사용하는 것은 가독성을 높이고,
           코드와 MyBatis 동작에 대한 의도를 명확히 전달하는 데 유용하다.
    -->

<!--    <insert id="registMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">-->
    <insert id="registMenu" parameterType="MenuDTO">
        insert into tbl_menu(
            menu_name,
            menu_price,
            category_code,
            orderable_status
        ) values (
            #{ name },
            #{ price },
            #{ categoryCode },
            'Y'
        )
    </insert>

<!--    <update id="modifyMenu" parameterType="com.ohgiraffers.section03.remix.MenuDTO">-->
    <update id="modifyMenu" parameterType="MenuDTO">
        update
            tbl_menu
        set
            menu_name = #{ name },
            menu_price = #{ price},
            category_code = #{ categoryCode }
        where
            menu_code = #{ code }
    </update>

    <delete id="deleteMenu" parameterType="_int">
        delete from
            tbl_menu
        where
            menu_code = #{ code }
    </delete>
</mapper>